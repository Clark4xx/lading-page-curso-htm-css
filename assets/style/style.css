:root {
    --primary-color: #0A1128;
    --white-color: #FFFFFF;
    --light-gray-color: #EEEEEE;
    --secondary-color: #706F87;
    --gap: 3rem;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*alterar a propriedade padrão da box model, usada para calcular larguras (widths) e alturas (heights) dos elementos.*/
    /*"border-box" -->> As propriedades de largura (width) e de altura (height) incluem o tamanho padding size e a propriedade border, mas não incluem a propriedade margin.*/
}

/* 
font-family: 'Montserrant', sans-serif;
font-family: 'Open Sans', sans-serif;
*/

html {
    font-size: 62.5%;
    scroll-behavior: smooth; /* scroll mais leve quando redirecionado */
}

body {
    font-family: 'Open Sans', sans-serif;
    font-size: 2rem;
    color: var(--primary-color);
    line-height: 1.5;
}

h1, h2, h3, h4, h5, h6 {
    font-family: 'Montserrat', sans-serif;
}

h1 {
    font-size: 6rem;
    text-transform: uppercase;
}

h2 {
    font-size: 6.5rem;
    margin-bottom: 5rem;
    text-transform: uppercase;
    line-height: 1.2;
}

h3 {
    font-size: 5rem;
}

h4 {
    font-size: 4.5rem;
}

h5 {
    font-size: 4rem;
}

h6 {
    font-size: 3.5rem;
}

a {
    text-decoration: none; /* retira os destaques dos links */
}

p{
    margin-bottom: 3rem;
}

table {
    min-width: 36rem;
    width: 100%;
    border-collapse: collapse; /*A propriedade border-collapse define se as bordas da tabela são recolhidos em uma única fronteira ou individual como em HTML padrão.*/
}

table caption {
    font-size: 1.6rem;
    font-style: italic;
    text-align: left;
    margin-bottom: 1rem;
}

table th, table td {
    white-space: nowrap; /*Faz com que o texto não quebre*/
    padding: 1rem;
    text-align: center;
    border: 0.1rem solid var(--light-gray-color);
}

tfoot td, table th {
    background: var(--light-gray-color);
}


.main-bg {
    background-image: url('../img/background.svg');
    background-size: cover;
    background-position: center center;
    color: var(--white-color);
}

.white-bg {
    background: var(--white-color);

}

.main-content {
    max-width: 120rem;
    margin: 0 auto;
    padding: 8rem var(--gap);
}

.section {
    min-height: 100vh;
}

.menu {
    background: var(--white-color);
    position: fixed;  /* Vai rolar junto com a página */
    z-index: 1; /* tudo vai ficar embaixo do menu */
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    border-bottom: 0.1rem solid var(--light-gray-color); /* necessário colocar essas três características da borda */
}

.menu-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 0;
    padding-bottom: 0;
}

.menu h1 {
    display: flex;
    font-size: 2.3rem;
    color: var(--primary-color);
}

.menu h1 a {
    color: inherit; /* "inherit" significar herdar as características do seu "pai", ou seja da tag acima */
}

.menu ul {
    list-style: none;
    display: flex;
}

/* criação de uma borda ao clicar nos menus de navegação */

.menu ul li a {
    display: block;
    padding: 2rem;
    font-size: 1.8rem;
    color: var(--primary-color);
    position: relative;
    left: 10rem;
}

.menu ul li a::after { /* "after" é um pseudoelemento */
    content: "";
    bottom: 0.8rem;
    left: 50%;
    width: 0%;
    position: absolute;
    height: 0.2rem;
    background: var(--secondary-color);
    transition: all 300ms ease-in-out; /* animação ao passar o mouse */
}

.menu ul li a:hover::after {
    width: 50%;  /* ao passar o mouse (houver) a borda vai obter 50% do seu width */
    left: 25%; /* vai fazer com que a animação comece do centro para fora, por isso do 50% ao 25% */
    
}

/* ================================================= */

.menu-spacing {
    height: 6.5rem;
}

body .full-width {
    width: 100%;
    flex: 1 1 100%
}

.intro-content {
    position: relative;
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: var(--gap);
    min-height: 100vh;

    /* justify-content: center; --> /* horizontal */
   /* align-items: center; --> /* vertical */

}

.intro-text-content, .intro-img {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.intro-img img, svg {
    max-width: 100%;
    height: auto;
}

.jobs-content {
    max-width: 64rem;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    justify-content: center;
    text-align: center;
}

.dev-content {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap; /* não permite que a coluna se quebre */
    min-height: 100vh;
    justify-content: center;
}

.dev-main-heading {
    margin-bottom: 1rem;
}

.dev-description {
    padding-bottom: 5rem;
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Criar repetidamente 3 colunas com 1 fração cada */
    gap: var(--gap);
    counter-reset: counter-grid; /* criação de um contador para o título (h3) */
}

.grid h3 {
    font-size: 2.5rem;
    position: relative; /* vai fazer com que o contador fique dentro do "container" que no caso é o grid h3 */
    padding-left: 5.2rem;
    padding-bottom: 2rem;

}

.grid h3::before { /* incrimentando o contador e o posicionando */
    counter-increment: counter-grid; /* incrementando o contador */
    content: counter(counter-grid); /* apontando qual contador deve ser utilizado */
    
    /* Posicionando o contador */

    position: absolute;
    font-size: 8rem;
    font-style: italic;
    top: -4rem;
    left: -2rem;
    transform: rotate(5deg); /* vai rotacionar o texto 5º */
}


.gallery-img {
    width: 100%;
    max-width: 36rem;
    max-height: 36rem;
    overflow: hidden;
}

.gallery-img img {
    transition: all 300ms ease-in-out;
}

.gallery-img img:hover {
    transform: translate(-3%, 3%) scale(1.2) rotate(5deg); /* efeito ao passar o mouse na imagem */
}

.grid-two {
    display: block;
 /* Criar repetidamente 3 colunas com 1 fração cada */
    gap: var(--gap);
    counter-reset: counter-grid; /* criação de um contador para o título (h3) */
}

.grid-two h3 {
    font-size: 2.2rem;
    position: relative; /* vai fazer com que o contador fique dentro do "container" que no caso é o grid h3 */
    padding-left: 5.2rem;
    padding-bottom: 4rem;

}

.grid-two h3::before { /* incrimentando o contador e o posicionando */
    counter-increment: counter-grid; /* incrementando o contador */
    content: counter(counter-grid); /* apontando qual contador deve ser utilizado */
    
    /* Posicionando o contador */

    position: absolute;
    font-size: 8rem;
    font-style: italic;
    top: -4rem;
    left: -2rem;
    transform: rotate(5deg); /* vai rotacionar o texto 5º */
}

.responsive-table {
    overflow-x: auto;
}

.contact-text-content, .contact-img {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.contact-form {
    grid-column: span 2;
}

.contact-form .form-grid {
    border: none;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--gap);
}

.form-group {
    flex: 1 1 32rem; /*propriedade define o comprimento flexível para elementos flexíveis, e caso o elemento não seja flexível, a propriedade não tera efeito (0 1 auto) ->> valor padrão*/
}

.form-grid legend {
    font-size: 1.6rem;
    font-style: italic;
    margin-bottom: 3rem;
}

.form-group label {
    margin-bottom: 1rem;
    display: block; /* Vai quebrar a linha nos "label", fazendo com que os inputs fiquem embaixo*/
}

.form-group input, .form-group textarea {
    border: none;
    background: var(--white-color);
    padding: 1.5rem 2rem; /*padding: CIMA/BAIXO   &    direita/esquerda*/
    width: 100%;
}

.form-group input:focus, .form-group textarea:focus {
    box-shadow: 0 0 1.5rem red;
}

.form-group button { 
    border: 0.5rem solid var(--white-color);
    background: none;
    color: var(--white-color);
    padding: 1.5rem 2rem;
    font-size: 2.5rem;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}

.form-group button:hover {
    background: var(--white-color);
    color: var(--primary-color);
}

.form-group ::placeholder {
    color: var(--secondary-color)
}

.footer {
    text-align: center;
    font-size: 1.6rem;
    margin-top: 3rem;
}

.footer a {
    color: var(--primary-color);
}

.heart {
    color: red;
}

.close-menu {
    display: none;
}

.back-to-top{
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: var(--white-color);
    width: 5rem;
    height: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    border: 0.1rem solid var(--primary-color);
    color: var(--primary-color);
}

.back-to-top img {
    color: var(--primary-color);
    width: 3rem;
    height: 3rem;
}

/*Media Queries -- Quebra dos componentes de acordo com o tamanho da página, ou seja, regulando para telas menores ou maiores*/

@media (max-width: 800px) {
    .intro-content, .grid {
        grid-template-columns: 1fr;
    }

    .gallery-img {
        width: 100%;
        max-width: 100%;
        max-height: 100%;
    }

    .gallery-img img {
        width: 100%;
    }

    .dev-content, .jobs-content {
        display: block;
    }

    .menu {
        bottom: 0;
        text-align: center;
    }

    .menu-content, .menu-content ul {
        flex-direction: column;
        justify-content: center;
    }

    .menu-content ul {
        margin-right: 20rem;
    }

    .menu-content {
        height: 100vh;
    }

    .menu {
        display: none;
    }

    .close-menu-label::after {
        content: '☰';
        position: fixed;
        z-index: 2;
        top: 2rem;
        right: 2rem;
        background: var(--primary-color);
        color: var(--white-color);
        font-size: 3rem;
        line-height: 3rem;
        width: 3rem;
        height: 3rem;
        text-align: center;
        padding: 0.5rem;
        cursor: pointer;        
    }

    /* Sistema para quando clicar na caixinha de menu, o menu abrir  e aparecer um "X", que quando clicado faz com que o menu desapareça*/

    .close-menu:checked~.menu {
        display: block;
    }

    .close-menu:checked~.close-menu-label::after {
        content: '×'
    }

    .menu-spacing {
        display: none;
    }
}